{"version":3,"sources":["Components/ContactForm/ContactForm.styled.jsx","Components/Utils/Button/Button.styled.jsx","Components/Utils/Button/Button.jsx","Components/Utils/Title/Title.styled.jsx","Components/Utils/Title/Title.jsx","Components/Utils/Input/Input.styled.jsx","Components/Utils/Input/Input.jsx","Components/ContactForm/ContactForm.jsx","Components/ContactItem/ContactItem.styled.jsx","Components/ContactItem/ContactItem.jsx","Components/ContactList/Contacts.styled.jsx","Components/ContactList/ContactList.jsx","Components/Filter/Filter.jsx","Components/Utils/Container/Container.styled.jsx","Components/Utils/Container/Container.jsx","App.js","index.js"],"names":["Form","styled","form","Btn","button","Button","text","onClick","title","PageTitle","h2","props","size","color","marginR","marginL","marginT","Title","Field","input","Input","value","type","name","onChange","placeholder","ContactForm","state","number","handleChange","e","currentTarget","setState","handleSubmit","preventDefault","onSubmit","this","pattern","required","Component","Name","p","Number","ContactItem","contact","List","ul","Item","li","ContactList","contacts","onDeleteContact","map","id","Filter","Wrapper","div","Container","children","App","filter","addContact","data","newContact","nextId","find","toLowerCase","alert","prev","deleteContact","contactId","handleFilterChange","target","filterByName","includes","localStorage","getItem","parsedContacts","JSON","parse","_","prevState","prevContacts","nextContacts","setItem","stringify","length","removeItem","filteredContacts","style","border","width","padding","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e30926d6.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Form = styled.form`\n  display: flex;\n`;\n","import styled from \"@emotion/styled\";\n\nexport const Btn = styled.button`\n  border: none;\n  background-color: transparent;\n  cursor: pointer;\n`;\n","import React from \"react\";\nimport { Btn } from \"./Button.styled\";\n\nfunction Button({ text, onClick, title }) {\n  return (\n    <Btn title={title} onClick={onClick}>\n      {text}\n    </Btn>\n  );\n}\n\nexport default Button;\n","import styled from \"@emotion/styled\";\n\nexport const PageTitle = styled.h2`\n  font-size: ${(props) => props.size}px;\n  color: ${(props) => props.color};\n  margin-right: ${(props) => props.marginR}px;\n  margin-left: ${(props) => props.marginL}px;\n  margin-top: ${(props) => props.marginT}px;\n`;\n","import React from \"react\";\nimport { PageTitle } from \"./Title.styled\";\n\nfunction Title({ marginT, marginR, marginL, text, size, color }) {\n  return (\n    <PageTitle\n      marginT={marginT}\n      marginR={marginR}\n      marginL={marginL}\n      color={color}\n      size={size}\n    >\n      {text}\n    </PageTitle>\n  );\n}\n\nexport default Title;\n","import styled from \"@emotion/styled\";\n\nexport const Field = styled.input`\n  width: 300px;\n  border: none;\n  border-bottom: 1px solid gray;\n  background-color: transparent;\n\n  &:hover {\n    border-bottom: 1px solid #000d59;\n  }\n`;\n","import React from \"react\";\nimport { Field } from \"./Input.styled\";\n\nfunction Input({ value, type, name, onChange, placeholder }) {\n  return (\n    <Field\n      placeholder={placeholder}\n      value={value}\n      type={type}\n      name={name}\n      onChange={onChange}\n    />\n  );\n}\n\nexport default Input;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Form } from \"./ContactForm.styled\";\nimport { MdPersonAdd } from \"react-icons/md\";\nimport Button from \"../Utils/Button/Button\";\nimport Title from \"../Utils/Title/Title\";\nimport Input from \"../Utils/Input/Input\";\n\nexport default class ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleChange = (e) => {\n    const value = e.currentTarget.value;\n    const name = e.currentTarget.name;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.setState({\n      name: \"\",\n      number: \"\",\n    });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Title marginR={15} size={18} text=\"Name\" />\n        <Input\n          placeholder=\"type name...\"\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={this.handleChange}\n        />\n        <Title marginR={15} marginL={30} size={18} text=\"Number\" />\n        <Input\n          placeholder=\"type number...\"\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={this.handleChange}\n        />\n        <Button\n          title=\"Add to contacts\"\n          text={<MdPersonAdd size={50} color=\"#187bcd\" />}\n          size={20}\n          type=\"submit\"\n        />\n      </Form>\n    );\n  }\n}\nContactForm.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nexport const Name = styled.p`\n  font-size: 18px;\n`;\nexport const Number = styled.p``;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Name, Number } from \"./ContactItem.styled\";\n\nfunction ContactItem({ contact }) {\n  return (\n    <>\n      <Name>{contact.name}</Name>\n      <Number>{contact.number}</Number>\n    </>\n  );\n}\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n};\nexport default ContactItem;\n","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\n  list-style: none;\n  display: flex;\n`;\nexport const Item = styled.li`\n  padding: 5px;\n  margin-right: 40px;\n`;\n","import React from \"react\";\nimport ContactItem from \"../ContactItem/ContactItem\";\nimport PropTypes from \"prop-types\";\nimport Button from \"../Utils/Button/Button\";\nimport { MdDeleteForever } from \"react-icons/md\";\nimport { List, Item } from \"./Contacts.styled\";\n\nfunction ContactList({ contacts, onDeleteContact }) {\n  return (\n    <>\n      <List>\n        {contacts.map((contact) => (\n          <Item key={contact.id}>\n            <ContactItem contact={contact} />\n            <Button\n              title=\"Remove from contacts\"\n              text={<MdDeleteForever color=\"#ff4f4f\" size={30} />}\n              type=\"button\"\n              onClick={() => onDeleteContact(contact.id)}\n            />\n          </Item>\n        ))}\n      </List>\n    </>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Title from \"../Utils/Title/Title\";\nimport Input from \"../Utils/Input/Input\";\n\nfunction Filter({ placeholder, value, onChange }) {\n  return (\n    <>\n      <Title size={18} text=\"Find Contacts by name\" />\n      <Input\n        placeholder=\"type to find contacts...\"\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={onChange}\n      />\n    </>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import styled from \"@emotion/styled\";\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  height: 100vh;\n  padding: 15px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import React from \"react\";\nimport { Wrapper } from \"./Container.styled\";\n\nfunction Container({ children }) {\n  return <Wrapper>{children}</Wrapper>;\n}\n\nexport default Container;\n","import React, { Component } from \"react\";\nimport ContactForm from \"./Components/ContactForm/ContactForm\";\nimport ContactList from \"./Components/ContactList/ContactList\";\nimport Filter from \"./Components/Filter/Filter\";\nimport nextId from \"react-id-generator\";\nimport Container from \"./Components/Utils/Container/Container\";\nimport Title from \"./Components/Utils/Title/Title\";\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      this.setState({\n        contacts: parsedContacts,\n      });\n    }\n  }\n\n  componentDidUpdate(_, prevState) {\n    const prevContacts = prevState.contacts;\n    const nextContacts = this.state.contacts;\n\n    if (prevContacts !== nextContacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(nextContacts));\n    }\n    if (nextContacts.length === 0) {\n      localStorage.removeItem(\"contacts\");\n    }\n  }\n\n  addContact = (data) => {\n    const { name, number } = data;\n    const { contacts } = this.state;\n    const id = nextId();\n    const newContact = {\n      name,\n      id,\n      number,\n    };\n    const checkOnSameContact = contacts.find(\n      (contact) => contact.name.toLowerCase() === newContact.name.toLowerCase()\n    );\n\n    if (checkOnSameContact) {\n      alert(`${newContact.name} is already in contacts`);\n      return;\n    }\n    if (name === \"\" && number === \"\") {\n      return;\n    }\n\n    if (name === \"\" || number === \"\") {\n      alert(\"Pleasy fill empty fields\");\n      return;\n    } else {\n      this.setState((prev) => ({\n        contacts: [...prev.contacts, newContact],\n      }));\n    }\n  };\n\n  deleteContact = (contactId) => {\n    this.setState((prev) => ({\n      contacts: prev.contacts.filter((contact) => contactId !== contact.id),\n    }));\n  };\n\n  handleFilterChange = (e) => {\n    const target = e.target.value;\n    this.setState({\n      filter: target,\n    });\n  };\n\n  filterByName = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n\n    const filteredContacts = this.filterByName();\n    return (\n      <Container>\n        <Title color=\"#424242\" size={30} text=\"Phonebook\" />\n        <div\n          style={{\n            border: \"1px solid gray\",\n            width: \"fit-content\",\n            padding: \"20px\",\n          }}\n        >\n          <ContactForm onSubmit={this.addContact} contacts={contacts} />\n        </div>\n        <Filter value={filter} onChange={this.handleFilterChange} />\n\n        <Title marginT={40} size={20} text=\"Contacts\" />\n\n        <ContactList\n          onDeleteContact={this.deleteContact}\n          contacts={filteredContacts}\n        />\n      </Container>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}